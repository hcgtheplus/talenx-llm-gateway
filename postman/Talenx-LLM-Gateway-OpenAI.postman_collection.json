{
  "info": {
    "name": "Talenx LLM Gateway (OpenAI)",
    "description": "OpenAI 모델과 MCP를 통합한 LLM 게이트웨이 API 컬렉션",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:1111",
      "type": "string"
    },
    {
      "key": "apiKey",
      "value": "tlx_0123456789abcdef0123456789abcdef",
      "type": "string",
      "description": "API 키 (첫 사용 시 자동 등록)"
    },
    {
      "key": "openaiModel",
      "value": "gpt-3.5-turbo",
      "type": "string",
      "description": "기본 OpenAI 모델"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "key",
        "value": "X-API-Key",
        "type": "string"
      },
      {
        "key": "value",
        "value": "{{apiKey}}",
        "type": "string"
      },
      {
        "key": "in",
        "value": "header",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "1. 빠른 시작",
      "item": [
        {
          "name": "헬스 체크",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "서버 상태 확인 (인증 불필요)"
          }
        },
        {
          "name": "첫 API 요청 (자동 등록)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/providers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "providers"]
            },
            "description": "첫 요청 시 API 키가 자동으로 Redis에 등록됩니다.\n\nAPI 키 형식: tlx_[32자리 16진수]"
          }
        }
      ]
    },
    {
      "name": "2. 인증 API",
      "item": [
        {
          "name": "API 키 검증",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"apiKey\": \"{{apiKey}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/api-key/validate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "api-key", "validate"]
            }
          }
        },
        {
          "name": "API 키 정보 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/api-key/info",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "api-key", "info"]
            }
          }
        },
        {
          "name": "API 키 폐기",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/api-key/revoke",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "api-key", "revoke"]
            }
          }
        }
      ]
    },
    {
      "name": "3. OpenAI API",
      "item": [
        {
          "name": "GPT-3.5 채팅",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"안녕하세요! 오늘 날씨가 어떤가요?\"\n    }\n  ],\n  \"temperature\": 0.7,\n  \"maxTokens\": 500\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/chat",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "chat"]
            },
            "description": "GPT-3.5 Turbo 모델과 대화"
          }
        },
        {
          "name": "GPT-4 채팅",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"복잡한 수학 문제를 풀어주세요: lim (x→∞) (1 + 1/x)^x\"\n    }\n  ],\n  \"temperature\": 0.3,\n  \"maxTokens\": 1000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/chat",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "chat"]
            },
            "description": "GPT-4 모델로 복잡한 작업 수행"
          }
        },
        {
          "name": "스트리밍 응답",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Python으로 퀵소트 알고리즘을 구현해주세요.\"\n    }\n  ],\n  \"stream\": true,\n  \"temperature\": 0.5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/chat",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "chat"]
            },
            "description": "Server-Sent Events로 스트리밍 응답 받기"
          }
        },
        {
          "name": "대화 컨텍스트 유지",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"당신은 친절한 프로그래밍 튜터입니다.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Python의 리스트 컴프리헨션이 뭔가요?\"\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"리스트 컴프리헨션은 Python에서 리스트를 간결하게 생성하는 방법입니다.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"예제를 보여주세요.\"\n    }\n  ],\n  \"temperature\": 0.7\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/chat",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "chat"]
            },
            "description": "이전 대화 컨텍스트를 포함한 요청"
          }
        },
        {
          "name": "사용 가능한 모델 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/providers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "providers"]
            },
            "description": "OpenAI의 사용 가능한 모델 목록"
          }
        },
        {
          "name": "사용량 통계",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/llm/usage?days=7",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "llm", "usage"],
              "query": [
                {
                  "key": "days",
                  "value": "7",
                  "description": "최근 N일간 통계"
                }
              ]
            },
            "description": "OpenAI API 사용량 통계"
          }
        }
      ]
    },
    {
      "name": "4. MCP API",
      "item": [
        {
          "name": "MCP 도구 목록",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mcp/tools",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "mcp", "tools"]
            }
          }
        },
        {
          "name": "MCP 도구 실행",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"get_appraisals\",\n  \"arguments\": {\n    \"page\": 1,\n    \"size\": 10,\n    \"status\": \"진행 중\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/mcp/tools/call",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "mcp", "tools", "call"]
            }
          }
        },
        {
          "name": "평가 목록 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mcp/appraisals?page=1&size=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "mcp", "appraisals"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "응답 결과 조회",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mcp/appraisals/1/groups/1/responses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "mcp", "appraisals", "1", "groups", "1", "responses"]
            }
          }
        },
        {
          "name": "MCP 헬스 체크",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/mcp/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "mcp", "health"]
            }
          }
        }
      ]
    },
    {
      "name": "5. 통합 처리 (OpenAI + MCP)",
      "item": [
        {
          "name": "간단한 프롬프트 처리",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"현재 진행 중인 평가는 몇 개인가요?\",\n  \"model\": \"gpt-3.5-turbo\",\n  \"temperature\": 0.7\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "process"]
            },
            "description": "OpenAI만 사용하여 프롬프트 처리"
          }
        },
        {
          "name": "MCP 도구 활용 처리",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"진행 중인 평가 목록을 가져와서 요약해주세요.\",\n  \"model\": \"gpt-3.5-turbo\",\n  \"mcpTools\": [\"get_appraisals\"],\n  \"temperature\": 0.5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "process"]
            },
            "description": "MCP 도구로 데이터를 가져온 후 OpenAI로 분석"
          }
        },
        {
          "name": "GPT-4로 고급 분석",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"prompt\": \"모든 평가의 현재 상태를 분석하고, 완료 예상 시기와 리스크 요인을 파악해주세요.\",\n  \"model\": \"gpt-4\",\n  \"mcpTools\": [\"get_appraisals\", \"get_response_results\"],\n  \"temperature\": 0.3,\n  \"maxTokens\": 2000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/process",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "process"]
            },
            "description": "GPT-4를 사용한 복잡한 분석 작업"
          }
        }
      ]
    },
    {
      "name": "6. 사용 시나리오",
      "item": [
        {
          "name": "시나리오: 코드 리뷰 봇",
          "item": [
            {
              "name": "코드 리뷰 요청",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"model\": \"gpt-4\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"당신은 경험이 풍부한 시니어 개발자입니다. 코드 리뷰를 진행해주세요.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"다음 Python 코드를 리뷰해주세요:\\n\\ndef calculate_average(numbers):\\n    total = 0\\n    for num in numbers:\\n        total = total + num\\n    return total / len(numbers)\"\n    }\n  ],\n  \"temperature\": 0.3\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/llm/chat",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "llm", "chat"]
                }
              }
            }
          ]
        },
        {
          "name": "시나리오: 데이터 분석 리포트",
          "item": [
            {
              "name": "평가 데이터 수집",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"get_appraisals\",\n  \"arguments\": {\n    \"status\": \"진행 중\"\n  }\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/mcp/tools/call",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "mcp", "tools", "call"]
                }
              }
            },
            {
              "name": "AI 분석 리포트 생성",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"prompt\": \"진행 중인 평가들의 현황을 분석하고, 주요 인사이트와 개선 제안을 포함한 리포트를 작성해주세요.\",\n  \"model\": \"gpt-4\",\n  \"mcpTools\": [\"get_appraisals\"],\n  \"temperature\": 0.5,\n  \"maxTokens\": 2000\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/process",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "process"]
                }
              }
            }
          ]
        },
        {
          "name": "시나리오: 문서 생성",
          "item": [
            {
              "name": "API 문서 자동 생성",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"model\": \"gpt-3.5-turbo\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"당신은 기술 문서 작성 전문가입니다.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"다음 함수에 대한 JSDoc 주석을 작성해주세요:\\n\\nfunction processUserData(userId, options = {}) {\\n  const defaults = { includeMetadata: false, format: 'json' };\\n  const config = { ...defaults, ...options };\\n  // 사용자 데이터 처리 로직\\n  return fetchUser(userId).then(user => formatData(user, config));\\n}\"\n    }\n  ],\n  \"temperature\": 0.3\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/llm/chat",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "llm", "chat"]
                }
              }
            }
          ]
        }
      ]
    }
  ]
}