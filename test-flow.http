### LLM Gateway 흐름 테스트 파일
### VS Code REST Client Extension 사용
### 설치: ext install humao.rest-client

@baseUrl = http://localhost:1111
@apiKey = tlx_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

### ============================================
### STEP 1: API 키 생성 (인증 토큰 발급)
### ============================================
# @name generate
POST {{baseUrl}}/api/v1/auth/api-key/generate

### 응답에서 apiKey를 복사해서 위의 @apiKey에 붙여넣기

### ============================================
### STEP 2: API 키 검증
### ============================================
# @name validate
POST {{baseUrl}}/api/v1/auth/api-key/validate
Content-Type: application/json

{
  "apiKey": "{{apiKey}}"
}

### ============================================
### STEP 3: API 키 정보 확인
### ============================================
GET {{baseUrl}}/api/v1/auth/api-key/info
X-API-Key: {{apiKey}}

### ============================================
### STEP 4: LLM 프로바이더 목록 확인
### ============================================
GET {{baseUrl}}/api/v1/llm/providers
X-API-Key: {{apiKey}}

### ============================================
### STEP 5: OpenAI 채팅 테스트
### ============================================
POST {{baseUrl}}/api/v1/llm/chat
X-API-Key: {{apiKey}}
Content-Type: application/json

{
  "provider": "openai",
  "model": "gpt-3.5-turbo",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant."
    },
    {
      "role": "user",
      "content": "Hello! Can you explain what an API Gateway is in one sentence?"
    }
  ],
  "temperature": 0.7,
  "maxTokens": 100
}

### ============================================
### STEP 6: 스트리밍 테스트
### ============================================
POST {{baseUrl}}/api/v1/llm/chat
X-API-Key: {{apiKey}}
Content-Type: application/json

{
  "provider": "openai",
  "model": "gpt-3.5-turbo",
  "messages": [
    {
      "role": "user",
      "content": "Count from 1 to 10 slowly"
    }
  ],
  "stream": true
}

### ============================================
### STEP 7: MCP 도구 목록 확인
### ============================================
GET {{baseUrl}}/api/v1/mcp/tools
X-API-Key: {{apiKey}}

### ============================================
### STEP 8: MCP 평가 목록 조회
### ============================================
GET {{baseUrl}}/api/v1/mcp/appraisals?page=1&size=10
X-API-Key: {{apiKey}}

### ============================================
### STEP 9: MCP 도구 직접 호출
### ============================================
POST {{baseUrl}}/api/v1/mcp/tools/call
X-API-Key: {{apiKey}}
Content-Type: application/json

{
  "name": "get_appraisals",
  "arguments": {
    "page": 1,
    "size": 5,
    "status": "pending"
  }
}

### ============================================
### STEP 10: 사용량 통계 확인
### ============================================
GET {{baseUrl}}/api/v1/llm/usage?days=7
X-API-Key: {{apiKey}}

### ============================================
### 에러 테스트 케이스
### ============================================

### 잘못된 API 키 (401 에러)
GET {{baseUrl}}/api/v1/auth/me
X-API-Key: tlx_invalid_key_12345678901234567890

### Rate Limit 테스트 (429 에러)
### 이 요청을 빠르게 100번 이상 실행
GET {{baseUrl}}/api/v1/auth/me
X-API-Key: {{apiKey}}

### 유효성 검사 실패 (400 에러)
POST {{baseUrl}}/api/v1/llm/chat
X-API-Key: {{apiKey}}
Content-Type: application/json

{
  "provider": "invalid_provider",
  "model": "gpt-3.5-turbo",
  "messages": []
}

### ============================================
### 헬스 체크
### ============================================
GET {{baseUrl}}/health

### MCP 헬스 체크
GET {{baseUrl}}/api/v1/mcp/health